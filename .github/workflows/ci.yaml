# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  POETRY_VERSION: 1.3.2

jobs:
  build:
    name: poetry-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: $POETRY_VERSION 

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          poetry install -E dev
        
      - name: Test with pytest
        run: |
          poetry run coverage run -m pytest -l  -rPap -vvv -p no:warnings 
          poetry run coverage xml

      - name: codecov
        run: |
          bash <(curl -s https://codecov.io/bash)

      - name: type check
        run: |
          poetry run mypy ridgeplot

  publish:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Install poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: $POETRY_VERSION 

      - name: publish to pypi
        run: |
          poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}

